{% extends 'base_post.jinja2' %}

{% block post_content %}
	<p>Even if <a title="internationalization and localization" href="http://book.cakephp.org/2.0/en/core-libraries/internationalization-and-localization.html" target="_blank">the documentation</a> is quite complete, I find that its better to have a &#8220;step-by-step&#8221; basic guide for internationalizing your pages. So here it is:</p>
<h2>Step 1 &#8211; Prepare your code:</h2>
<p>
You need to use the <a href="http://book.cakephp.org/2.0/en/core-libraries/global-constants-and-functions.html#__" target="_blank">__()</a> function to translate your text, so instead of doing something like:
</p>
<pre class="brush: php;tab-size: 2;gutter: false;">&lt;h1&gt; Hi, my name is &lt;?php echo $name;?&gt;&lt;/h1&gt;</pre>
<p>
It should be:
</p>
<pre class="brush: php;tab-size: 2;gutter: false;">&lt;h1&gt;&lt;?php echo __("Hi, my name is %s",$name);?&gt;</pre>
<h2>Step 2 &#8211; Create your pot file:</h2>
<p>
Using the bake command, cakephp will read all your source files and it will extract all the text to translate. So it&#8217;s very important that you write the string in the i18n function and don&#8217;t pass just variables. For example:
</p>
<pre class="brush: php;tab-size: 2;gutter: false;">//This will give you a headache
if($isConnected){
$message = "hello";
} else {
$message = "login";
]
echo __($message);
//using bake, you wont be able to extract the two strings, "hello" and "login", and they wont be present in your pot file.</pre>
<p>
So, to extract the text, using the command line go to you app directory, and execute the i18n command:
</p>
<pre class="brush: shell;tab-size: 2;gutter: false;">$ cd /var/www/mysite/app
$ ./Console/cake i18n</pre>
<p>
You&#8217;ll see:
</p>
<pre class="brush: shell;tab-size: 2;gutter: false;">Welcome to CakePHP v2.0.6 Console
---------------------------------------------------------------
App : app
Path: /var/www/mysite/app/
---------------------------------------------------------------
I18n Shell
---------------------------------------------------------------
[E]xtract POT file from sources
[I]nitialize i18n database table
[H]elp
[Q]uit
What would you like to do? (E/I/H/Q)</pre>
<p>
Choose &#8220;E&#8221;, to extract the text. Now you&#8217;ll see:
</p>
<pre class="brush: shell;tab-size: 2;gutter: false;">What is the path you would like to extract?
[Q]uit [D]one
[/var/www/mysite/app/] &gt;</pre>
<p>
here, cake is asking you where are your source files located, by default it will use the app folder and it will search recursively all the source files. However you might have some vendor libraries (or even a third party software like wordpress) installed on your app folder, so usually I only tell cake to extract the strings from the &#8220;View&#8221;,&#8221;Controller&#8221; and &#8220;Model&#8221; directories. But to make it simple.. let&#8217;s just use the app folder, so select &#8220;D&#8221; then press &#8220;enter&#8221;
</p>
<p>
Cake might ask you a few more questions,like if you already had a pot file or if you&#8217;re working with different domains. I&#8217;ll leave that to you. In the end you need to have the <strong>default.pot</strong> file inside <strong>app/Locale/</strong>
</p>
<h2>Step 3 &#8211; Translate your code using <a title="poedit" href="http://www.poedit.net/" target="_blank">poedit</a></h2>
<p>
Download and install poedit then go to: <strong>File-&gt;New Catalog from POT file</strong>. And select the default.pot file you&#8217;ve just created. Fill in the form to add some information about the translation (if you have the time to do it XD) and now poedit will ask you where you want to save your .po file. You should save it in:
</p>
<pre class="brush: php;tab-size: 2;gutter: false;">/app/Locale/&lt;locale&gt;/LC_MESSAGES/default.po</pre>
<p>
where &lt;locale&gt; is the three-character locale code. Go check the doc on cakephp for more info.
</p>
<h2>Step 4 &#8211; <a href="http://book.cakephp.org/2.0/en/core-libraries/internationalization-and-localization.html#localization-in-cakephp" target="_blank">Localization in Cakephp</a></h2>
<p>RTFM!</p>
<h2>Step 5 &#8211; Updating your pot files:</h2>
<p>
Because we are not perfect, (or because the client ALWAYS wants to change everything), you might need to change/add/delete some of the source text So basically you need to repeat the step 1 and 2. That is: parse and extract all the strings in your source files and create the .pot file
</p>
<p>
Now open your .po file (attention: its the PO file, not the POT file!!!) with poedit and go to: <strong>Catalog-&gt;Update from POT file</strong>. It will compare your po file with the new pot file to check what text has been added, or has been deleted. Sometimes it will even try to help you with your translation (lines in yellow) using the previous translations.
</p>
<p>
And that&#8217;s it!!!
</p>
<h2>Final notes</h2>
<ul>
<li>Since cakephp 2.0 you ALWAYS need to echo the i18n function. So if you think that one of the strings is not been translated, the first thing to check is that you&#8217;re doing &#8220;echo __()&#8221; and not simply &#8220;__()&#8221;.</li>
<li>In poedit, the shortcut to pass to the next translation is &#8220;Ctrl+down&#8221; or &#8220;Ctrl+up&#8221;. Might save you a lot of time</li>
<li>Try to put complete sentences in the translations string. Avoid doing something like:
<pre class="brush: php;tab-size: 2;gutter: false;">echo __("Hello, my name is") . $name . __("and I'm") . $age . __("years old");</pre>
<p>It will not only make more translation strings, but depending on the language it could be impossible to translate the text because of the order of the variables.. Our example should be:</p>
<pre class="brush: php;tab-size: 2;gutter: false;">echo __("Hello, my name is $s and I'm %d years old",$name,$age);</pre>
<p>And you&#8217;ll make the translator&#8217;s life easier n_n</li>
</ul>
<p>
This was just a basic guide to start. There are a few more options in cakephp, like domains, and I haven&#8217;t said anything about Localization. You can continue reading about it in the documentation of cakephp
</p>
<p>
Hope this helps <img src="http://www.pabloleanomartinet.com/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /></p>
<div class="addtoany_share_save_container addtoany_content_bottom"><div class="a2a_kit a2a_kit_size_32 addtoany_list a2a_target" id="wpa2a_1"><a class="a2a_button_facebook" href="http://www.addtoany.com/add_to/facebook?linkurl=http%3A%2F%2Fwww.pabloleanomartinet.com%2Fcakephp-2-x-guide-internationalizing-website-using-poedit%2F&amp;linkname=Cakephp%202.x%20guide%20for%20Internationalizing%20your%20website%20using%20poedit" title="Facebook" rel="nofollow" target="_blank"></a><a class="a2a_button_twitter" href="http://www.addtoany.com/add_to/twitter?linkurl=http%3A%2F%2Fwww.pabloleanomartinet.com%2Fcakephp-2-x-guide-internationalizing-website-using-poedit%2F&amp;linkname=Cakephp%202.x%20guide%20for%20Internationalizing%20your%20website%20using%20poedit" title="Twitter" rel="nofollow" target="_blank"></a><a class="a2a_button_google_plus" href="http://www.addtoany.com/add_to/google_plus?linkurl=http%3A%2F%2Fwww.pabloleanomartinet.com%2Fcakephp-2-x-guide-internationalizing-website-using-poedit%2F&amp;linkname=Cakephp%202.x%20guide%20for%20Internationalizing%20your%20website%20using%20poedit" title="Google+" rel="nofollow" target="_blank"></a><a class="a2a_dd addtoany_share_save" href="https://www.addtoany.com/share_save"></a>
<script type="text/javascript"><!--
wpa2a.script_load();
//--></script>
</div></div><div class="clear"></div>        <div class="post-info">
            <div class="left"> <a href="http://www.pabloleanomartinet.com/category/posts/" rel="category tag">Posts</a> </div>
            <div class="right"> Tags: <a href="http://www.pabloleanomartinet.com/tag/cakephp/" rel="tag">cakephp</a>, <a href="http://www.pabloleanomartinet.com/tag/i18n/" rel="tag">i18n</a>, <a href="http://www.pabloleanomartinet.com/tag/tutorial-2/" rel="tag">tutorial</a>  </div>
        </div>

        <div class="clear"></div>

{% endblock %}
